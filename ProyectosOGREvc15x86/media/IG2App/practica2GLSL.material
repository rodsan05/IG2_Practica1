vertex_program MyFirstShaderVS glsl
{
    source MyFirstShaderVS.glsl
    
    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program MyFirstShaderFS glsl
{
    source MyFirstShaderFS.glsl
    default_params
    {
    }
}

material Practica2/Bomba
{
    technique 
    {
        pass 
        {
            vertex_program_ref MyFirstShaderVS
            { // params ‐> default_params
            }
            fragment_program_ref MyFirstShaderFS
            { // params ‐> default_params
            }
        }
    }
}

vertex_program SpaceSkyVS glsl
{
    source SpaceSkyVS.glsl
    
    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program SpaceSkyFS glsl
{
    source SpaceSkyFS.glsl
    default_params
    {
        param_named lightMap int 0
        param_named spaceSky int 1
    }
}

material Practica2/SpaceSkyGLSL
{
    technique 
    {
        pass 
        {
            
            vertex_program_ref SpaceSkyVS
            { // params ‐> default_params
            }
            fragment_program_ref SpaceSkyFS
            { // params ‐> default_params
            }

            texture_unit 
            { // * ‐> int 0
                texture lightMap.jpg 2d    
                tex_address_mode wrap 
            }
            texture_unit 
            { // * ‐> int 1
                texture spaceSky.jpg 2d
                tex_address_mode wrap 
            } // de acceso al texel
        } 
    } 
}

vertex_program SpaceVS glsl
{
    source SpaceVS.glsl
    
    default_params
    {
        param_named_auto st sintime_0_2pi 10
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program SpaceFS glsl
{
    source SpaceFS.glsl
    default_params
    {
        param_named lightMap int 0
        param_named spaceSky int 1
    }
}

material Practica2/SpaceGLSL
{
    technique 
    {
        pass 
        {
            
            vertex_program_ref SpaceVS
            { // params ‐> default_params
            }
            fragment_program_ref SpaceFS
            { // params ‐> default_params
            }

            texture_unit 
            { // * ‐> int 0
                texture lightMap.jpg 2d    
                tex_address_mode wrap 
            }
            texture_unit 
            { // * ‐> int 1
                texture spaceSky.jpg 2d
                tex_address_mode wrap 
            } // de acceso al texel
        } 
    } 
}

vertex_program BombaTeseladaVS glsl
{
    source BombaTeseladaVS.glsl
    
    default_params
    {
        param_named_auto st sintime_0_2pi 10
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program BombaTeseladaFS glsl
{
    source BombaTeseladaFS.glsl
    default_params
    {
        param_named checker int 0
        param_named bumpyMetal int 1
        param_named spaceSky int 2
    }
}

material Practica2/BombaTeselada
{
    technique 
    {
        pass 
        {
            lighting off
            vertex_program_ref BombaTeseladaVS
            { // params ‐> default_params
            }
            fragment_program_ref BombaTeseladaFS
            { // params ‐> default_params
            }

            texture_unit 
            {
                texture checker.png 2d    
            }
            texture_unit 
            {
                texture BumpyMetal.jpg 2d    
            }
            texture_unit 
            {
                texture spaceSky.jpg 2d
            }
        } 
    } 
}

vertex_program HolesVS glsl
{
    source HolesVS.glsl
    
    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program HolesFS glsl
{
    source HolesFS.glsl
    default_params
    {
        param_named corrosion int 0
        param_named texFront int 1
        param_named texBack int 2
        param_named_auto flipping render_target_flipping
    }
}

material Practica2/Holes
{
    technique 
    {
        pass 
        {
            cull_hardware none
            lighting off
            vertex_program_ref HolesVS
            { // params ‐> default_params
            }
            fragment_program_ref HolesFS
            { // params ‐> default_params
            }

            texture_unit 
            {
                texture corrosion.jpg 2d    
            }
            texture_unit 
            {
                texture BumpyMetal.jpg 2d    
            }
            texture_unit 
            {
                texture BeachStones.jpg 2d
            }
        } 
    } 
}

vertex_program HolesAndVertexLightingVS glsl
{
    source HolesAndVertexLightingVS.glsl
    
    default_params
    {
        param_named_auto modelViewMat worldview_matrix
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto normalMat inverse_transpose_worldview_matrix
        
        param_named_auto lightDiffuse light_diffuse_colour 0
        param_named_auto lightPosition light_position 0

        param_named frontDiffuse float3 0.72 0.57 0.35
        param_named backDiffuse float3 0.0 0.6 0.83
    }
}

fragment_program HolesAndVertexLightingFS glsl
{
    source HolesAndVertexLightingFS.glsl
    default_params
    {
        param_named corrosion int 0
        param_named texFront int 1
        param_named texBack int 2
        param_named_auto flipping render_target_flipping
    }
}

material Practica2/HolesAndVertexLighting
{
    technique 
    {
        pass 
        {
            cull_hardware none
            lighting off
            vertex_program_ref HolesAndVertexLightingVS
            { // params ‐> default_params
            }
            fragment_program_ref HolesAndVertexLightingFS
            { // params ‐> default_params
            }

            texture_unit 
            {
                texture corrosion.jpg 2d    
            }
            texture_unit 
            {
                texture BumpyMetal.jpg 2d    
            }
            texture_unit 
            {
                texture BeachStones.jpg 2d
            }
        } 
    } 
}

vertex_program HolesAndLightingVS glsl
{
    source HolesAndLightingVS.glsl
    
    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program HolesAndLightingFS glsl
{
    source HolesAndLightingFS.glsl
    default_params
    {
        param_named corrosion int 0
        param_named texFront int 1
        param_named texBack int 2
        param_named_auto flipping render_target_flipping

        param_named_auto worldMat world_matrix
        param_named_auto normalMat inverse_transpose_world_matrix

        param_named_auto lightDiffuse light_diffuse_colour 0
        param_named_auto lightPosition light_position 0

        param_named frontDiffuse float3 0.72 0.57 0.35
        param_named backDiffuse float3 0.0 0.6 0.83
    }
}

material Practica2/HolesAndLighting
{
    technique 
    {
        pass 
        {
            cull_hardware none
            lighting off
            vertex_program_ref HolesAndLightingVS
            { // params ‐> default_params
            }
            fragment_program_ref HolesAndLightingFS
            { // params ‐> default_params
            }

            texture_unit 
            {
                texture corrosion.jpg 2d    
            }
            texture_unit 
            {
                texture BumpyMetal.jpg 2d    
            }
            texture_unit 
            {
                texture BeachStones.jpg 2d
            }
        } 
    } 
}

vertex_program SpotLightVS glsl
{
    source SpotLightVS.glsl
    
    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program SpotLightFS glsl
{
    source SpotLightFS.glsl
    default_params
    {
        param_named stones int 0

        param_named_auto worldMat world_matrix
        param_named_auto normalMat inverse_transpose_world_matrix
        
        param_named_auto lightPosition float4 0.0 100.0 0.0 1.0
        param_named_auto cutoff costime_0_2pi 5
    }
}

material Practica2/SpotLight
{
    technique 
    {
        pass 
        {
            lighting off
            vertex_program_ref SpotLightVS
            { // params ‐> default_params
            }
            fragment_program_ref SpotLightFS
            { // params ‐> default_params
            }

            texture_unit 
            {
                texture BeachStones.jpg 2d
            }
        } 
    } 
}

material IG2/ejemplo2GLSL 
{
    technique 
    {
        pass 
        {
            vertex_program_ref Ejemplo2VS
            { // params ‐> default_params
            }
            fragment_program_ref Ejemplo2FS
            { // params ‐> default_params
            }
            texture_unit 
            { // * ‐> int 0
                texture ejemploA.jpg 2d 
                tex_address_mode clamp 
                filtering bilinear            
            }
            texture_unit 
            { // * ‐> int 1
                texture ejemploB.jpg 2d
                tex_address_mode wrap 
            } // de acceso al texel
        } 
    } 
}